cmake_minimum_required(VERSION 3.16)
project(leetcode CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
find_package(GTest REQUIRED)
enable_testing()
macro(SUBDIRLIST result curdir)
    file(GLOB children RELATIVE ${curdir} ${curdir}/*)
    set(dirlist "")
    foreach(child ${children})
        if(IS_DIRECTORY ${curdir}/${child})
            LIST(APPEND dirlist ${child})
        endif()
    endforeach()
    set(${result} ${dirlist})
endmacro()
message(src_dir ${CMAKE_SOURCE_DIR})
SUBDIRLIST(SUBDIRS ${CMAKE_SOURCE_DIR})
foreach(CURRENT_FOLDER ${SUBDIRS})
    if(CURRENT_FOLDER GREATER 0)
        message(INFO- ${CURRENT_FOLDER})
        file(GLOB children RELATIVE ${CMAKE_SOURCE_DIR}/${CURRENT_FOLDER} ${CMAKE_SOURCE_DIR}/${CURRENT_FOLDER}/*)
        foreach(child ${children})
            message(child-${child})
            if(${child} MATCHES "Solution.*")
                message("find target: " ${CURRENT_FOLDER}.${child})
                add_executable(${CURRENT_FOLDER}.${child} main.cpp)
                target_compile_definitions(${CURRENT_FOLDER}.${child} PRIVATE SOLUTION_FILE=${CURRENT_FOLDER}/${child} TEST_FILE=${CURRENT_FOLDER}/test.cpp)
                target_link_libraries(${CURRENT_FOLDER}.${child} GTest::GTest GTest::Main)
                add_test (${CURRENT_FOLDER}.${child} ${CURRENT_FOLDER}.${child})
            endif()
        endforeach()
    endif()
endforeach()